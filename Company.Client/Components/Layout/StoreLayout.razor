@inherits LayoutComponentBase
@inject NavigationManager NavigationManager

<div class="store-layout">
    <!-- Top Header -->
    <header class="top-header">
        <div class="header-content">

            <!-- Brand Section -->
            <div class="brand-section" @onclick='() => NavigationManager.NavigateTo("/")'>
                <div class="brand-logo">E</div>
                <div class="brand-text">
                    <div class="company-name">EnergyWay</div>
                    <div class="company-slogan">Global Energy Solutions</div>
                </div>
            </div>

            <!-- Search Section -->
            <div class="search-section">
                <div class="search-container">
                    <input type="text"
                           placeholder="Search for energy products..."
                           class="search-input"
                           @bind="searchQuery"
                           @oninput="OnSearchInput" />
                    <i class="fas fa-search search-icon"></i>
                    @if (!string.IsNullOrEmpty(searchQuery))
                    {
                        <button class="clear-search-btn" @onclick="ClearSearch">
                            <i class="fas fa-times"></i>
                        </button>
                    }
                </div>
            </div>

            <!-- User Actions -->
            <div class="user-actions">
                <!-- Favorites -->
                <button class="action-btn @(showFavorites ? "active" : "")"
                        @onclick="ToggleFavorites"
                        title="Favorites">
                    <i class="@(showFavorites ? "fas" : "far") fa-heart"></i>
                </button>

                <!-- Notifications -->
                <button class="action-btn @(showNotifications ? "active" : "")"
                        @onclick="ToggleNotifications"
                        title="Notifications">
                    <i class="@(showNotifications ? "fas" : "far") fa-bell"></i>
                    <span class="notification-badge">3</span>
                </button>

                <!-- Profile/Login -->
                <div class="user-profile-section">
                    @if (isLoggedIn)
                    {
                        <div class="user-info @(showProfileMenu ? "open" : "")" @onclick="ToggleProfileMenu">
                            <div class="user-avatar">@GetUserInitials()</div>
                            <div class="user-name">@currentUserName</div>
                            <i class="fas fa-chevron-down dropdown-arrow"></i>
                        </div>

                        @if (showProfileMenu)
                        {
                            <div class="profile-dropdown">
                                <a href="/profile" class="dropdown-item"><i class="fas fa-user"></i> Profile</a>
                                <a href="/orders" class="dropdown-item"><i class="fas fa-shopping-bag"></i> Orders</a>
                                <a href="/settings" class="dropdown-item"><i class="fas fa-cog"></i> Settings</a>
                                <div class="dropdown-divider"></div>
                                <a href="#" class="dropdown-item" @onclick="HandleLogout">
                                    <i class="fas fa-sign-out-alt"></i> Logout
                                </a>
                            </div>
                        }
                    }
                    else
                    {
                        <button class="login-btn" @onclick="NavigateToLogin">
                            <i class="fas fa-sign-in-alt"></i> Login
                        </button>
                    }
                </div>
            </div>
        </div>
    </header>

    <!-- Main Content -->
    <main class="main-content">
        @Body
    </main>
</div>

@code {
    private string searchQuery = "";
    private bool showFavorites = false;
    private bool showNotifications = false;
    private bool showProfileMenu = false;

    private bool isLoggedIn = false;
    private string currentUserName = "Ahmed Mohamed";

    private void OnSearchInput(ChangeEventArgs e)
    {
        searchQuery = e.Value?.ToString() ?? "";
    }

    private void ClearSearch() => searchQuery = "";
    private void ToggleFavorites() => showFavorites = !showFavorites;
    private void ToggleNotifications() => showNotifications = !showNotifications;
    private void ToggleProfileMenu() => showProfileMenu = !showProfileMenu;
    private void NavigateToLogin() => NavigationManager.NavigateTo("/login");

    private void HandleLogout()
    {
        isLoggedIn = false;
        currentUserName = "";
        showProfileMenu = false;
        NavigationManager.NavigateTo("/");
    }

    private string GetUserInitials()
    {
        if (string.IsNullOrEmpty(currentUserName)) return "U";
        var parts = currentUserName.Split(' ', StringSplitOptions.RemoveEmptyEntries);
        return parts.Length >= 2
            ? $"{parts[0][0]}{parts[1][0]}".ToUpper()
            : parts[0][0].ToString().ToUpper();
    }
}
