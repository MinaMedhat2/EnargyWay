@page "/payment/{ProductId:int}"
@layout CheckoutLayout
@rendermode @(new InteractiveServerRenderMode(prerender: false))

@using Company.Client.Models
@using System.Text.Json
@using System.Net
@inject NavigationManager NavigationManager
@inject OrderStateService OrderState

<PageTitle>Payment Method | EnergyWay</PageTitle>

<div class="payment-container">
    <div class="glass-card-opaque">
        <h3 class="mb-4">Payment Method</h3>

        @if (finalOrderModel is not null)
        {
            <div class="payment-option-selected">
                <div class="icon-container">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-cash-coin" viewBox="0 0 16 16">
                        <path fill-rule="evenodd" d="M11 15a4 4 0 1 0 0-8 4 4 0 0 0 0 8zm5-4a5 5 0 1 1-10 0 5 5 0 0 1 10 0z" />
                        <path d="M9.438 11.944c.047.596.518 1.06 1.363 1.116v.44h.375v-.443c.875-.061 1.386-.529 1.386-1.207 0-.618-.39-.935-1.37-1.293-.98-.37-1.218-.592-1.218-.91V8.71c0-.364.307-.638.914-.638.581 0 .93.34.943.808h.711c-.052-1.09-.851-1.75-1.946-1.75-1.043 0-1.86.656-1.86 1.58 0 .58.329.914 1.181 1.28.95.368 1.232.642 1.232.986 0 .374-.356.632-.988.632-.601 0-.955-.298-.98-.816h-.71z" />
                        <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zM1 8a7 7 0 1 1 14 0A7 7 0 0 1 1 8z" />
                    </svg>
                </div>
                <div class="text-container">
                    <span class="fw-bold fs-5">Cash on Delivery</span>
                    <span class="text-white-50">You will pay when you receive your order.</span>
                </div>
            </div>

            <hr class="my-4" style="border-color: rgba(255,255,255,0.3  );">

            <button class="w-100 btn btn-primary btn-lg" @onclick="ProceedToConfirmation">
                Continue to Confirmation
            </button>
            <button class="w-100 btn btn-link btn-sm mt-2" @onclick="GoBack">
                Back to Shipping Info
            </button>
        }
        else
        {
            <div class="alert alert-danger">Could not load shipping information. Please go back and try again.</div>
            <button class="w-100 btn btn-secondary mt-3" @onclick="GoBack">
                Go Back
            </button>
        }
    </div>
</div>

@code {
    [Parameter]
    public int ProductId { get; set; }

    // Use FinalOrderModel to match the type expected by OrderStateService.SetFinalOrder
    private FinalOrderModel? finalOrderModel;

    protected override void OnInitialized()
    {
        if (OrderState.ShippingInfo != null)
        {
            // Create an instance of FinalOrderModel using the data from ShippingInfo
            finalOrderModel = new FinalOrderModel
            {
                FullName = OrderState.ShippingInfo.FullName,
                Email = OrderState.ShippingInfo.Email,
                PhoneNumber = OrderState.ShippingInfo.PhoneNumber,
                ShippingAddress = OrderState.ShippingInfo.ShippingAddress,
                Quantity = OrderState.ShippingInfo.Quantity,
                PaymentMethod = "Cash on Delivery" // Set the payment method
            };
        }
        else
        {
            // If shipping info is missing, ensure the model is null to show the error message
            finalOrderModel = null;
        }
    }

    private void ProceedToConfirmation()
    {
        if (finalOrderModel != null)
        {
            // This will now work correctly as the types match
            OrderState.SetFinalOrder(finalOrderModel);
            NavigationManager.NavigateTo($"/confirmation/{ProductId}");
        }
    }

    private void GoBack()
    {
        // Navigate back to the checkout page. The data is preserved in OrderStateService.
        NavigationManager.NavigateTo($"/checkout/{ProductId}");
    }
}
