@page "/admin/top-selling"
@attribute [Authorize(Roles = "Admin")]
@layout AdminLayout
@rendermode InteractiveServer
@inject HttpClient Http
@inject IConfiguration Configuration

<PageTitle>Top Selling Products</PageTitle>

<!-- ✅ 1. رأس صفحة احترافي وموحد -->
<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h1 class="mb-0">Top Selling Products</h1>
        <p class="text-muted mb-0">A report of the best-selling products based on quantity sold.</p>
    </div>
    <i class="fas fa-trophy fa-3x text-warning"></i>
</div>


@if (isLoading)
{
    <div class="text-center p-5"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div><p class="mt-2"><em>Loading report...</em></p></div>
}
else if (topProducts != null && topProducts.Any())
{
    <!-- ✅ 2. تم تحويل القائمة إلى جدول واستخدام table-wrapper -->
    <div class="table-wrapper">
        <table class="table align-middle">
            <thead>
                <tr>
                    <th style="width: 5%;">Rank</th>
                    <th style="width: 10%;">Image</th>
                    <th style="width: 55%;">Product Name</th>
                    <th style="width: 30%;" class="text-center">Total Units Sold</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var (product, index) in topProducts.Select((p, i) => (p, i)))
                {
                    <tr>
                        <!-- ✅ 3. تصميم أنيق للترتيب -->
                        <td class="text-center">
                            <span class="badge bg-dark rounded-pill fs-6">@(index + 1)</span>
                        </td>
                        <td>
                            <!-- ✅ 4. تم إزالة style المضمن -->
                            <img src="@(ApiBaseUrl + "/" + product.ImagePath)" class="img-thumbnail" alt="@product.Name" />
                        </td>
                        <td>
                            <h5 class="mb-0">@product.Name</h5>
                        </td>
                        <td class="text-center">
                            <span class="badge bg-success rounded-pill fs-6">
                                @product.TotalQuantitySold Units
                            </span>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}
else
{
    <div class="alert alert-info">No sales data available to generate the report.</div>
}


@code {
    private List<TopSellingProductDto>? topProducts;
    private bool isLoading = true;
    private string? errorMessage;
    private string ApiBaseUrl { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        ApiBaseUrl = Configuration["ApiBaseUrl"] ?? "https://localhost:7185";
        var requestUrl = "api/products/topselling";
        try
        {
            // جلب أفضل 10 منتجات فقط
            topProducts = await Http.GetFromJsonAsync<List<TopSellingProductDto>>(requestUrl + "?count=10");
        }
        catch (Exception ex)
        {
            errorMessage = $"Failed to load data. Details: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    public class TopSellingProductDto
    {
        public int ProductId { get; set; }
        public string Name { get; set; } = string.Empty;
        public string? ImagePath { get; set; }
        public int TotalQuantitySold { get; set; }
    }
}
